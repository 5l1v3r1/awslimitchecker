
.. -- WARNING -- WARNING -- WARNING
   This document is automatically generated by
   awslimitchecker/docs/build_generated_docs.py.
   Please edit that script, or the template it points to.

.. _limits:

Supported Limits
================

.. _limits.trusted_advisor:

Trusted Advisor Data
---------------------


So long as the Service and Limit names used by Trusted Advisor (and returned
in its API responses) exactly match those shown below, all limits listed in
Trusted Advisor "Service Limit" checks should be automatically used by
awslimitchecker. The following service limits have been confirmed as being
updated from Trusted Advisor:


* AutoScaling

  * Auto Scaling groups

  * Launch configurations

* CloudFormation

  * Stacks

* EBS

  * Active snapshots

  * Active volumes

  * General Purpose (SSD) volume storage (GiB)

  * Magnetic volume storage (GiB)

  * Provisioned IOPS

  * Provisioned IOPS (SSD) storage (GiB)

* EC2

  * Elastic IP addresses (EIPs)

  * Running On-Demand c3.large instances

  * Running On-Demand c4.xlarge instances

  * Running On-Demand m3.2xlarge instances

  * Running On-Demand m3.large instances

  * Running On-Demand m3.medium instances

  * Running On-Demand m3.xlarge instances

  * Running On-Demand m4.large instances

  * Running On-Demand t1.micro instances

  * Running On-Demand t2.large instances

  * VPC Elastic IP addresses (EIPs)

* ELB

  * Active load balancers

* IAM

  * Groups

  * Instance profiles

  * Policies

  * Roles

  * Server certificates

  * Users

* RDS

  * DB instances

  * DB parameter groups

  * DB security groups

  * DB snapshots per user

  * Max auths per security group

  * Storage quota (GB)

  * Subnet Groups

  * Subnets per Subnet Group

* SES

  * Daily sending quota

* VPC

  * Internet gateways

  * VPCs



.. _limits.api:

Limits Retrieved from Service APIs
----------------------------------


The limits listed below can be retrieved directly from their Service's
API; this information should be the most accurate, and is used with higher
precedence than anything other than explicit limit overrides:


* AutoScaling

  * Auto Scaling groups

  * Launch configurations

* CloudFormation

  * Stacks

* DynamoDB

  * Account Max Read Capacity Units

  * Account Max Write Capacity Units

  * Table Max Read Capacity Units

  * Table Max Write Capacity Units

* EC2

  * Elastic IP addresses (EIPs)

  * Running On-Demand EC2 instances

  * VPC Elastic IP addresses (EIPs)

  * VPC security groups per elastic network interface

* ELB

  * Active load balancers

  * Listeners per application load balancer

  * Listeners per load balancer

  * Rules per application load balancer

  * Target groups

* IAM

  * Groups

  * Instance profiles

  * Policies

  * Policy Versions In Use

  * Roles

  * Server certificates

  * Users

* RDS

  * DB Cluster Parameter Groups

  * DB Clusters

  * DB instances

  * DB parameter groups

  * DB security groups

  * DB snapshots per user

  * Event Subscriptions

  * Max auths per security group

  * Option Groups

  * Read replicas per master

  * Reserved Instances

  * Storage quota (GB)

  * Subnet Groups

  * Subnets per Subnet Group

* SES

  * Daily sending quota



.. _limits.checks:

Current Checks
---------------

The section below lists every limit that this version of awslimitchecker knows
how to check, and its hard-coded default value (per AWS documentation). Limits
marked with :sup:`(TA)` are comfirmed as being updated by Trusted Advisor.

.. _limits.ApiGateway:

ApiGateway
+++++++++++

=============================== ====
Limit                           Default
=============================== ====
API keys per account            500 
APIs per account                60  
Client certificates per account 60  
Custom authorizers per API      10  
Documentation parts per API     2000
Resources per API               300 
Stages per API                  10  
Usage plans per account         300 
=============================== ====

.. _limits.AutoScaling:

AutoScaling
++++++++++++

============================================== ===
Limit                                          Default
============================================== ===
Auto Scaling groups :sup:`(TA)` :sup:`(API)`   20 
Launch configurations :sup:`(TA)` :sup:`(API)` 100
============================================== ===

.. _limits.CloudFormation:

CloudFormation
+++++++++++++++

=============================== ===
Limit                           Default
=============================== ===
Stacks :sup:`(TA)` :sup:`(API)` 200
=============================== ===

.. _limits.DynamoDB:

DynamoDB
+++++++++

============================================= =====
Limit                                         Default
============================================= =====
Account Max Read Capacity Units :sup:`(API)`  20000
Account Max Write Capacity Units :sup:`(API)` 20000
Global Secondary Indexes                      5    
Local Secondary Indexes                       5    
Table Max Read Capacity Units :sup:`(API)`    10000
Table Max Write Capacity Units :sup:`(API)`   10000
Tables Per Region                             256  
============================================= =====

.. _limits.EBS:

EBS
++++

====================================================== =====
Limit                                                  Default
====================================================== =====
Active snapshots :sup:`(TA)`                           10000
Active volumes :sup:`(TA)`                             5000 
Cold (HDD) volume storage (GiB)                        20480
General Purpose (SSD) volume storage (GiB) :sup:`(TA)` 20480
Magnetic volume storage (GiB) :sup:`(TA)`              20480
Provisioned IOPS (SSD) storage (GiB) :sup:`(TA)`       20480
Provisioned IOPS :sup:`(TA)`                           40000
Throughput Optimized (HDD) volume storage (GiB)        20480
====================================================== =====

.. _limits.EC2:

EC2
++++


**Note on On-Demand vs Reserved Instances:** The EC2 limits for
"Running On-Demand" EC2 Instances apply only to On-Demand instances,
not Reserved Instances. If you list all EC2 instances that are
running in the Console or API, you'll get back instances of all types
(On-Demand, Reserved, etc.). The value that awslimitchecker reports
for Running On-Demand Instances current usage will *not* match the
number of instances you see in the Console or API.


============================================================== ====
Limit                                                          Default
============================================================== ====
Elastic IP addresses (EIPs) :sup:`(TA)` :sup:`(API)`           5   
Max active spot fleets per region                              1000
Max launch specifications per spot fleet                       50  
Max spot instance requests per region                          20  
Max target capacity for all spot fleets in region              5000
Max target capacity per spot fleet                             3000
Rules per VPC security group                                   50  
Running On-Demand EC2 instances :sup:`(API)`                   20  
Running On-Demand c1.medium instances                          20  
Running On-Demand c1.xlarge instances                          20  
Running On-Demand c3.2xlarge instances                         20  
Running On-Demand c3.4xlarge instances                         20  
Running On-Demand c3.8xlarge instances                         20  
Running On-Demand c3.large instances :sup:`(TA)`               20  
Running On-Demand c3.xlarge instances                          20  
Running On-Demand c4.2xlarge instances                         20  
Running On-Demand c4.4xlarge instances                         10  
Running On-Demand c4.8xlarge instances                         5   
Running On-Demand c4.large instances                           20  
Running On-Demand c4.xlarge instances :sup:`(TA)`              20  
Running On-Demand c5.18xlarge instances                        5   
Running On-Demand c5.2xlarge instances                         20  
Running On-Demand c5.4xlarge instances                         10  
Running On-Demand c5.9xlarge instances                         5   
Running On-Demand c5.large instances                           20  
Running On-Demand c5.xlarge instances                          20  
Running On-Demand cc2.8xlarge instances                        20  
Running On-Demand cg1.4xlarge instances                        2   
Running On-Demand cr1.8xlarge instances                        2   
Running On-Demand d2.2xlarge instances                         20  
Running On-Demand d2.4xlarge instances                         10  
Running On-Demand d2.8xlarge instances                         5   
Running On-Demand d2.xlarge instances                          20  
Running On-Demand f1.16xlarge instances                        20  
Running On-Demand f1.2xlarge instances                         20  
Running On-Demand g2.2xlarge instances                         5   
Running On-Demand g2.8xlarge instances                         2   
Running On-Demand g3.16xlarge instances                        1   
Running On-Demand g3.4xlarge instances                         1   
Running On-Demand g3.8xlarge instances                         1   
Running On-Demand h1.16xlarge instances                        5   
Running On-Demand h1.2xlarge instances                         20  
Running On-Demand h1.4xlarge instances                         20  
Running On-Demand h1.8xlarge instances                         10  
Running On-Demand hi1.4xlarge instances                        2   
Running On-Demand hs1.8xlarge instances                        2   
Running On-Demand i2.2xlarge instances                         8   
Running On-Demand i2.4xlarge instances                         4   
Running On-Demand i2.8xlarge instances                         2   
Running On-Demand i2.xlarge instances                          8   
Running On-Demand i3.16xlarge instances                        2   
Running On-Demand i3.2xlarge instances                         2   
Running On-Demand i3.4xlarge instances                         2   
Running On-Demand i3.8xlarge instances                         2   
Running On-Demand i3.large instances                           2   
Running On-Demand i3.xlarge instances                          2   
Running On-Demand m1.large instances                           20  
Running On-Demand m1.medium instances                          20  
Running On-Demand m1.small instances                           20  
Running On-Demand m1.xlarge instances                          20  
Running On-Demand m2.2xlarge instances                         20  
Running On-Demand m2.4xlarge instances                         20  
Running On-Demand m2.xlarge instances                          20  
Running On-Demand m3.2xlarge instances :sup:`(TA)`             20  
Running On-Demand m3.large instances :sup:`(TA)`               20  
Running On-Demand m3.medium instances :sup:`(TA)`              20  
Running On-Demand m3.xlarge instances :sup:`(TA)`              20  
Running On-Demand m4.10xlarge instances                        5   
Running On-Demand m4.16xlarge instances                        5   
Running On-Demand m4.2xlarge instances                         20  
Running On-Demand m4.4xlarge instances                         10  
Running On-Demand m4.large instances :sup:`(TA)`               20  
Running On-Demand m4.xlarge instances                          20  
Running On-Demand m5.12xlarge instances                        5   
Running On-Demand m5.24xlarge instances                        5   
Running On-Demand m5.2xlarge instances                         20  
Running On-Demand m5.4xlarge instances                         10  
Running On-Demand m5.large instances                           20  
Running On-Demand m5.xlarge instances                          20  
Running On-Demand p2.16xlarge instances                        1   
Running On-Demand p2.8xlarge instances                         1   
Running On-Demand p2.xlarge instances                          1   
Running On-Demand p3.16xlarge instances                        1   
Running On-Demand p3.2xlarge instances                         1   
Running On-Demand p3.8xlarge instances                         1   
Running On-Demand r3.2xlarge instances                         20  
Running On-Demand r3.4xlarge instances                         10  
Running On-Demand r3.8xlarge instances                         5   
Running On-Demand r3.large instances                           20  
Running On-Demand r3.xlarge instances                          20  
Running On-Demand r4.16xlarge instances                        1   
Running On-Demand r4.2xlarge instances                         20  
Running On-Demand r4.4xlarge instances                         10  
Running On-Demand r4.8xlarge instances                         5   
Running On-Demand r4.large instances                           20  
Running On-Demand r4.xlarge instances                          20  
Running On-Demand t1.micro instances :sup:`(TA)`               20  
Running On-Demand t2.2xlarge instances                         20  
Running On-Demand t2.large instances :sup:`(TA)`               20  
Running On-Demand t2.medium instances                          20  
Running On-Demand t2.micro instances                           20  
Running On-Demand t2.nano instances                            20  
Running On-Demand t2.small instances                           20  
Running On-Demand t2.xlarge instances                          20  
Running On-Demand x1.16xlarge instances                        20  
Running On-Demand x1.32xlarge instances                        20  
Running On-Demand x1e.32xlarge instances                       20  
Running On-Demand x1e.xlarge instances                         20  
Security groups per VPC                                        500 
VPC Elastic IP addresses (EIPs) :sup:`(TA)` :sup:`(API)`       5   
VPC security groups per elastic network interface :sup:`(API)` 5   
============================================================== ====

.. _limits.EFS:

EFS
++++

============ ==
Limit        Default
============ ==
File systems 10
============ ==

.. _limits.ELB:

ELB
++++

==================================================== ====
Limit                                                Default
==================================================== ====
Active load balancers :sup:`(TA)` :sup:`(API)`       20  
Listeners per application load balancer :sup:`(API)` 50  
Listeners per load balancer :sup:`(API)`             100 
Rules per application load balancer :sup:`(API)`     100 
Target groups :sup:`(API)`                           3000
==================================================== ====

.. _limits.ElastiCache:

ElastiCache
++++++++++++

======================== ===
Limit                    Default
======================== ===
Nodes                    100
Nodes per Cluster        20 
Parameter Groups         20 
Security Groups          50 
Subnet Groups            50 
Subnets per subnet group 20 
======================== ===

.. _limits.ElasticBeanstalk:

ElasticBeanstalk
+++++++++++++++++

==================== ===
Limit                Default
==================== ===
Application versions 500
Applications         25 
Environments         200
==================== ===

.. _limits.Firehose:

Firehose
+++++++++

=========================== ==
Limit                       Default
=========================== ==
Delivery streams per region 20
=========================== ==

.. _limits.IAM:

IAM
++++

============================================ =====
Limit                                        Default
============================================ =====
Groups :sup:`(TA)` :sup:`(API)`              100  
Instance profiles :sup:`(TA)` :sup:`(API)`   100  
Policies :sup:`(TA)` :sup:`(API)`            1000 
Policy Versions In Use :sup:`(API)`          10000
Roles :sup:`(TA)` :sup:`(API)`               250  
Server certificates :sup:`(TA)` :sup:`(API)` 20   
Users :sup:`(TA)` :sup:`(API)`               5000 
============================================ =====

.. _limits.RDS:

RDS
++++

===================================================== ======
Limit                                                 Default
===================================================== ======
DB Cluster Parameter Groups :sup:`(API)`              50    
DB Clusters :sup:`(API)`                              40    
DB instances :sup:`(TA)` :sup:`(API)`                 40    
DB parameter groups :sup:`(TA)` :sup:`(API)`          50    
DB security groups :sup:`(TA)` :sup:`(API)`           25    
DB snapshots per user :sup:`(TA)` :sup:`(API)`        100   
Event Subscriptions :sup:`(API)`                      20    
Max auths per security group :sup:`(TA)` :sup:`(API)` 20    
Option Groups :sup:`(API)`                            20    
Read replicas per master :sup:`(API)`                 5     
Reserved Instances :sup:`(API)`                       40    
Storage quota (GB) :sup:`(TA)` :sup:`(API)`           100000
Subnet Groups :sup:`(TA)` :sup:`(API)`                50    
Subnets per Subnet Group :sup:`(TA)` :sup:`(API)`     20    
VPC Security Groups                                   5     
===================================================== ======

.. _limits.Redshift:

Redshift
+++++++++

========================= ==
Limit                     Default
========================= ==
Redshift manual snapshots 20
Redshift subnet groups    20
========================= ==

.. _limits.S3:

S3
+++

======= ===
Limit   Default
======= ===
Buckets 100
======= ===

.. _limits.SES:

SES
++++

============================================ ===
Limit                                        Default
============================================ ===
Daily sending quota :sup:`(TA)` :sup:`(API)` 200
============================================ ===

.. _limits.VPC:

VPC
++++

============================= ===
Limit                         Default
============================= ===
Entries per route table       50 
Internet gateways :sup:`(TA)` 5  
NAT Gateways per AZ           5  
Network ACLs per VPC          200
Route tables per VPC          200
Rules per network ACL         20 
Subnets per VPC               200
VPCs :sup:`(TA)`              5  
Virtual private gateways      5  
============================= ===



